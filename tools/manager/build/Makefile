# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = ..
  TARGET = $(TARGETDIR)/manager
  OBJDIR = obj/Debug
  DEFINES +=
  INCLUDES += -I../../../include -I../../../include/ipv4
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -g -Wall -Wextra -idirafter ../../../kernel/src -DLINUX -std=gnu99 -mcmodel=large -Wno-unused -Wno-format -Wno-unused-result
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lumpn -lrt -lvnic
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L.. -nostartfiles -Wl,-Ttext-segment=0xff00000000
  LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Running prebuild commands
	../mkver.sh > ../src/version.h
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = ..
  TARGET = $(TARGETDIR)/manager
  OBJDIR = obj/Release
  DEFINES +=
  INCLUDES += -I../../../include -I../../../include/ipv4
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -g -Wall -Wextra -idirafter ../../../kernel/src -DLINUX -std=gnu99 -mcmodel=large -Wno-unused -Wno-format -Wno-unused-result
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CFLAGS)
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lumpn -lrt -lvnic
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -L.. -nostartfiles -Wl,-Ttext-segment=0xff00000000
  LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
	@echo Running prebuild commands
	../mkver.sh > ../src/version.h
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/apic.o \
	$(OBJDIR)/command.o \
	$(OBJDIR)/cpu.o \
	$(OBJDIR)/device.o \
	$(OBJDIR)/dispatcher.o \
	$(OBJDIR)/nicdev.o \
	$(OBJDIR)/elf.o \
	$(OBJDIR)/entry.o \
	$(OBJDIR)/gdt.o \
	$(OBJDIR)/gmalloc.o \
	$(OBJDIR)/icc.o \
	$(OBJDIR)/idt.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/malloc.o \
	$(OBJDIR)/manager.o \
	$(OBJDIR)/mapping.o \
	$(OBJDIR)/mp.o \
	$(OBJDIR)/netlink.o \
	$(OBJDIR)/popcorn.o \
	$(OBJDIR)/shared.o \
	$(OBJDIR)/shell.o \
	$(OBJDIR)/smap.o \
	$(OBJDIR)/stdio.o \
	$(OBJDIR)/task.o \
	$(OBJDIR)/vm.o \

RESOURCES := \

CUSTOMFILES := \

ifeq ($(config),debug)
  OBJECTS += \
	obj/Debug/apic_asm.o \
	obj/Debug/asm.o \
	obj/Debug/port_asm.o \

endif

ifeq ($(config),release)
  OBJECTS += \
	obj/Release/apic_asm.o \
	obj/Release/asm.o \
	obj/Release/port_asm.o \

endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking Manager
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Manager
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH)
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/apic.o: ../src/apic.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
ifeq ($(config),debug)
obj/Debug/apic_asm.o: ../src/apic_asm.asm
	@echo "Compiling ../src/apic_asm.asm"
	$(SILENT) nasm -f elf64 -o "obj/Debug/apic_asm.o" "../src/apic_asm.asm"
endif
ifeq ($(config),release)
obj/Release/apic_asm.o: ../src/apic_asm.asm
	@echo "Compiling ../src/apic_asm.asm"
	$(SILENT) nasm -f elf64 -o "obj/Release/apic_asm.o" "../src/apic_asm.asm"
endif
ifeq ($(config),debug)
obj/Debug/asm.o: ../src/asm.asm
	@echo "Compiling ../src/asm.asm"
	$(SILENT) nasm -f elf64 -o "obj/Debug/asm.o" "../src/asm.asm"
endif
ifeq ($(config),release)
obj/Release/asm.o: ../src/asm.asm
	@echo "Compiling ../src/asm.asm"
	$(SILENT) nasm -f elf64 -o "obj/Release/asm.o" "../src/asm.asm"
endif
$(OBJDIR)/command.o: ../src/command.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cpu.o: ../src/cpu.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/device.o: ../src/device.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/dispatcher.o: ../src/dispatcher.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/nicdev.o: ../src/driver/nicdev.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/elf.o: ../src/elf.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entry.o: ../src/entry.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gdt.o: ../src/gdt.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gmalloc.o: ../src/gmalloc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/icc.o: ../src/icc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/idt.o: ../src/idt.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: ../src/main.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/malloc.o: ../src/malloc.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/manager.o: ../src/manager.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mapping.o: ../src/mapping.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mp.o: ../src/mp.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/netlink.o: ../src/netlink.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/popcorn.o: ../src/popcorn.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
ifeq ($(config),debug)
obj/Debug/port_asm.o: ../src/port_asm.asm
	@echo "Compiling ../src/port_asm.asm"
	$(SILENT) nasm -f elf64 -o "obj/Debug/port_asm.o" "../src/port_asm.asm"
endif
ifeq ($(config),release)
obj/Release/port_asm.o: ../src/port_asm.asm
	@echo "Compiling ../src/port_asm.asm"
	$(SILENT) nasm -f elf64 -o "obj/Release/port_asm.o" "../src/port_asm.asm"
endif
$(OBJDIR)/shared.o: ../src/shared.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shell.o: ../src/shell.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/smap.o: ../src/smap.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stdio.o: ../src/stdio.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/task.o: ../src/task.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vm.o: ../src/vm.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif