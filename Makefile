# GNU Make workspace makefile autogenerated by Premake

.NOTPARALLEL:

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  hal_config = debug
  tlsf_config = debug
  ext_config = debug
  lwip_config = debug
  lib_config = debug
  loader_config = debug
  kernel_config = debug
  linux_config = debug
  virtio_config = debug
  fat_config = debug
  driver_config = debug
  build_config = debug
endif
ifeq ($(config),release)
  hal_config = release
  tlsf_config = release
  ext_config = release
  lwip_config = release
  lib_config = release
  loader_config = release
  kernel_config = release
  linux_config = release
  virtio_config = release
  fat_config = release
  driver_config = release
  build_config = release
endif
ifeq ($(config),linux)
  hal_config = linux
  tlsf_config = linux
  ext_config = linux
  lwip_config = linux
  lib_config = linux
  loader_config = linux
  kernel_config = linux
  linux_config = linux
  virtio_config = linux
  fat_config = linux
  driver_config = linux
  build_config = linux
endif

PROJECTS := hal tlsf ext lwip lib loader kernel linux virtio fat driver build

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

hal:
ifneq (,$(hal_config))
	@echo "==== Building hal ($(hal_config)) ===="
	@${MAKE} --no-print-directory -C lib/hal -f Makefile config=$(hal_config)
endif

tlsf: hal
ifneq (,$(tlsf_config))
	@echo "==== Building tlsf ($(tlsf_config)) ===="
	@${MAKE} --no-print-directory -C lib/TLSF-2.4.6 -f Makefile config=$(tlsf_config)
endif

ext: hal tlsf
ifneq (,$(ext_config))
	@echo "==== Building ext ($(ext_config)) ===="
	@${MAKE} --no-print-directory -C lib/ext -f Makefile config=$(ext_config)
endif

lwip:
ifneq (,$(lwip_config))
	@echo "==== Building lwip ($(lwip_config)) ===="
	@${MAKE} --no-print-directory -C lib/lwip-1.4.1 -f Makefile config=$(lwip_config)
endif

lib:
ifneq (,$(lib_config))
	@echo "==== Building lib ($(lib_config)) ===="
	@${MAKE} --no-print-directory -C lib -f Makefile config=$(lib_config)
endif

loader:
ifneq (,$(loader_config))
	@echo "==== Building loader ($(loader_config)) ===="
	@${MAKE} --no-print-directory -C loader -f Makefile config=$(loader_config)
endif

kernel: ext tlsf lwip
ifneq (,$(kernel_config))
	@echo "==== Building kernel ($(kernel_config)) ===="
	@${MAKE} --no-print-directory -C kernel -f Makefile config=$(kernel_config)
endif

linux:
ifneq (,$(linux_config))
	@echo "==== Building linux ($(linux_config)) ===="
	@${MAKE} --no-print-directory -C drivers/linux -f Makefile config=$(linux_config)
endif

virtio:
ifneq (,$(virtio_config))
	@echo "==== Building virtio ($(virtio_config)) ===="
	@${MAKE} --no-print-directory -C drivers/virtio -f Makefile config=$(virtio_config)
endif

fat:
ifneq (,$(fat_config))
	@echo "==== Building fat ($(fat_config)) ===="
	@${MAKE} --no-print-directory -C drivers/fat -f Makefile config=$(fat_config)
endif

driver:
ifneq (,$(driver_config))
	@echo "==== Building driver ($(driver_config)) ===="
	@${MAKE} --no-print-directory -C drivers -f Makefile config=$(driver_config)
endif

build:
ifneq (,$(build_config))
	@echo "==== Building build ($(build_config)) ===="
	@${MAKE} --no-print-directory -C . -f build.make config=$(build_config)
endif

clean:
	@${MAKE} --no-print-directory -C lib/hal -f Makefile clean
	@${MAKE} --no-print-directory -C lib/TLSF-2.4.6 -f Makefile clean
	@${MAKE} --no-print-directory -C lib/ext -f Makefile clean
	@${MAKE} --no-print-directory -C lib/lwip-1.4.1 -f Makefile clean
	@${MAKE} --no-print-directory -C lib -f Makefile clean
	@${MAKE} --no-print-directory -C loader -f Makefile clean
	@${MAKE} --no-print-directory -C kernel -f Makefile clean
	@${MAKE} --no-print-directory -C drivers/linux -f Makefile clean
	@${MAKE} --no-print-directory -C drivers/virtio -f Makefile clean
	@${MAKE} --no-print-directory -C drivers/fat -f Makefile clean
	@${MAKE} --no-print-directory -C drivers -f Makefile clean
	@${MAKE} --no-print-directory -C . -f build.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  linux"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   hal"
	@echo "   tlsf"
	@echo "   ext"
	@echo "   lwip"
	@echo "   lib"
	@echo "   loader"
	@echo "   kernel"
	@echo "   linux"
	@echo "   virtio"
	@echo "   fat"
	@echo "   driver"
	@echo "   build"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"